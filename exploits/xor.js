import _ from 'lodash';
import * as algos from '../algos';
import { printableAsciiChars } from '../constants';
import { singleCharString } from '../utilities';

export const singleKeyBruteForce = (input) => {
  const cipherBin = input;
  const ascii = algos.convert.bin.toAscii(cipherBin);
  const length = ascii.length;

  let results = [];
  for (let i in printableAsciiChars) {
    const char = printableAsciiChars[i]
    const key = singleCharString(char, length);
    const keyBin = algos.convert.ascii.toBin(key);

    const xorResult = algos.xor(cipherBin, keyBin);
    const plaintext = algos.convert.bin.toAscii(xorResult);
    const score = algos.freq.score(plaintext);

    results.push({
      char: char,
      plaintext: plaintext,
      score: score,
    });
  }

  return _.maxBy(results, (result) => {
    return result.score;
  });
};
